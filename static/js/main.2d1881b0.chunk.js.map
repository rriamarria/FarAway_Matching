{"version":3,"sources":["react-auth0-spa.js","components/Welcome.component.js","components/navbar/Navbar.component.js","components/profile/Profile.component.js","utils/history.js","components/PrivateRoute.js","App.js","serviceWorker.js","index.js"],"names":["DEFAULT_REDIRECT_CALLBACK","window","history","replaceState","document","title","location","pathname","Auth0Context","React","createContext","useAuth0","useContext","Welcome","props","className","Component","NavBar","isAuthenticated","loginWithRedirect","logout","variant","type","onClick","class","to","Profile","loading","user","id","for","src","href","target","createBrowserHistory","PrivateRoute","component","path","rest","useEffect","a","appState","targetUrl","fn","render","App","exact","Home","Boolean","hostname","match","ReactDOM","children","onRedirectCallback","initOptions","useState","setIsAuthenticated","setUser","auth0Client","setAuth0","setLoading","popupOpen","setPopupOpen","createAuth0Client","auth0FromHook","search","includes","handleRedirectCallback","getUser","initAuth0","loginWithPopup","params","console","error","Provider","value","getIdTokenClaims","getTokenSilently","getTokenWithPopup","domain","config","client_id","clientId","redirect_uri","origin","push","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2d1881b0.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport createAuth0Client from \"@auth0/auth0-spa-js\";\r\n\r\nconst DEFAULT_REDIRECT_CALLBACK = () =>\r\n  window.history.replaceState({}, document.title, window.location.pathname);\r\n\r\nexport const Auth0Context = React.createContext();\r\nexport const useAuth0 = () => useContext(Auth0Context);\r\nexport const Auth0Provider = ({\r\n  children,\r\n  onRedirectCallback = DEFAULT_REDIRECT_CALLBACK,\r\n  ...initOptions\r\n}) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState();\r\n  const [user, setUser] = useState();\r\n  const [auth0Client, setAuth0] = useState();\r\n  const [loading, setLoading] = useState(true);\r\n  const [popupOpen, setPopupOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const initAuth0 = async () => {\r\n      const auth0FromHook = await createAuth0Client(initOptions);\r\n      setAuth0(auth0FromHook);\r\n\r\n      if (window.location.search.includes(\"code=\")) {\r\n        const { appState } = await auth0FromHook.handleRedirectCallback();\r\n        onRedirectCallback(appState);\r\n      }\r\n\r\n      const isAuthenticated = await auth0FromHook.isAuthenticated();\r\n\r\n      setIsAuthenticated(isAuthenticated);\r\n\r\n      if (isAuthenticated) {\r\n        const user = await auth0FromHook.getUser();\r\n        setUser(user);\r\n      }\r\n\r\n      setLoading(false);\r\n    };\r\n    initAuth0();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const loginWithPopup = async (params = {}) => {\r\n    setPopupOpen(true);\r\n    try {\r\n      await auth0Client.loginWithPopup(params);\r\n    } catch (error) {\r\n      console.error(error);\r\n    } finally {\r\n      setPopupOpen(false);\r\n    }\r\n    const user = await auth0Client.getUser();\r\n    setUser(user);\r\n    setIsAuthenticated(true);\r\n  };\r\n\r\n  const handleRedirectCallback = async () => {\r\n    setLoading(true);\r\n    await auth0Client.handleRedirectCallback();\r\n    const user = await auth0Client.getUser();\r\n    setLoading(false);\r\n    setIsAuthenticated(true);\r\n    setUser(user);\r\n  };\r\n  return (\r\n    <Auth0Context.Provider\r\n      value={{\r\n        isAuthenticated,\r\n        user,\r\n        loading,\r\n        popupOpen,\r\n        loginWithPopup,\r\n        handleRedirectCallback,\r\n        getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\r\n        loginWithRedirect: (...p) => auth0Client.loginWithRedirect(...p),\r\n        getTokenSilently: (...p) => auth0Client.getTokenSilently(...p),\r\n        getTokenWithPopup: (...p) => auth0Client.getTokenWithPopup(...p),\r\n        logout: (...p) => auth0Client.logout(...p)\r\n      }}\r\n    >\r\n      {children}\r\n    </Auth0Context.Provider>\r\n  );\r\n};","import React from 'react'\r\n\r\nclass Welcome extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"background\">\r\n                <div className=\"stars\"></div>\r\n                <div className=\"twinkling\"></div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Welcome;","\r\nimport React from \"react\";\r\nimport {Link} from 'react-router-dom'\r\nimport { useAuth0 } from \"../../react-auth0-spa\";\r\nimport {Button} from 'react-bootstrap'\r\nimport Welcome from '../Welcome.component'\r\n\r\nconst NavBar = () => {\r\n  const { isAuthenticated, loginWithRedirect, logout} = useAuth0();\r\n\r\n  return (\r\n    <div>\r\n      {!isAuthenticated && (\r\n        <div>\r\n       \r\n        <button variant=\"danger\" className=\"button\" type=\"button\" onClick={() => loginWithRedirect({})}>Log in/Sign in</button>\r\n        <Welcome/>\r\n<div className=\"fade\"></div>\r\n        <section class=\"star-wars\">\r\n\r\n  <div class=\"crawl\">\r\n    \r\n    <div class=\"title\">\r\n      <p>Far Away Matching</p>\r\n      <h1>The Best Hope</h1>\r\n    </div>\r\n    \r\n    <p>It is a period of civil war. Rebel spaceships, striking from a hidden base, have won their first victory against the evil Galactic Empire.</p>     \r\n    <p>During the battle, you can relax and find your match... Just imagine, winning the war and having someone special exactly suited for your personality and not only, to share this moment with and all the special moments that you'll face together, after.</p>\r\n    <p>Hapilly ever after to the Death Star and back... with Far Away Matching!</p>\r\n\r\n  </div>\r\n\r\n</section>\r\n        </div>\r\n      )}\r\n     \r\n\r\n{isAuthenticated && <button onClick={() => logout()}>Log out</button>}\r\n\r\n{/* NEW - add a link to the home and profile pages */}\r\n{isAuthenticated && (\r\n  <span>\r\n    <Link to=\"/home\">Home</Link>&nbsp;\r\n    <Link to=\"/profile\">Profile</Link>\r\n  </span>\r\n)}\r\n  </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;","import React, { Fragment } from \"react\";\r\nimport { useAuth0 } from \"../../react-auth0-spa\";\r\n\r\nconst Profile = () => {\r\n  const { loading, user } = useAuth0();\r\n\r\n  if (loading || !user) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    \r\n    <Fragment>\r\n\r\n\r\n<input id=\"slider\" class=\"customSlider\" type=\"checkbox\"/>\r\n<label for=\"slider\"></label>\r\n\r\n<div class=\"wrapper\">\r\n    <div class=\"top-icons\">\r\n        <i class=\"fas fa-long-arrow-alt-left\"></i>\r\n        <i class=\"fas fa-ellipsis-v\"></i>\r\n        <i class=\"far fa-heart\"></i>\r\n    </div>\r\n    \r\n    <div class=\"profile\">\r\n        <img src=\"https://images.unsplash.com/photo-1484186139897-d5fc6b908812?ixlib=rb-0.3.5&s=9358d797b2e1370884aa51b0ab94f706&auto=format&fit=crop&w=200&q=80%20500w\" class=\"thumbnail\"/>\r\n        <div class=\"check\"><i class=\"fas fa-check\"></i></div>\r\n        <h3 class=\"name\">Beverly Little</h3>\r\n        <p class=\"title\">Javascript Developer</p>\r\n        <p class=\"description\">Lorem ipsum dolor sit amet consectetur adipisicing elit. Neque aliquam aliquid porro!</p>\r\n        <button type=\"button\" class=\"btn\">Hire Me</button>\r\n    </div>\r\n    \r\n    <div class=\"social-icons\">\r\n        <div class=\"icon\">\r\n            <a href=\"/\"><i class=\"fab fa-dribbble\"></i></a>\r\n            <h4>12.8k</h4>\r\n            <p>Followers</p>\r\n        </div>\r\n        \r\n        <div class=\"icon\">\r\n            <a href=\"#\"><i class=\"fab fa-behance\"></i></a>\r\n            <h4>12.8k</h4>\r\n            <p>Followers</p>\r\n        </div>\r\n        \r\n        <div class=\"icon\">\r\n            <a href=\"#\"><i class=\"fab fa-twitter\"></i></a>\r\n            <h4>12.8k</h4>\r\n            <p>Followers</p>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"concept\">concept by \r\n    <a href=\"https://dribbble.com/shots/4346772-Profile-Card\" target=\"_blank\">\r\n        <i class=\"fab fa-dribbble\"></i> Vijay Verma\r\n    </a>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n      {/* <img src={user.picture} alt=\"Profile\" />\r\n\r\n      <h2>{user.name}</h2>\r\n      <p>{user.email}</p>\r\n      <code>{JSON.stringify(user, null, 2)}</code> */}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n\r\n\r\n","import { createBrowserHistory } from \"history\";\r\nexport default createBrowserHistory();","import React, { useEffect } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { useAuth0 } from \"../react-auth0-spa\";\r\n\r\nconst PrivateRoute = ({ component: Component, path, ...rest }) => {\r\n  const { loading, isAuthenticated, loginWithRedirect } = useAuth0();\r\n\r\n  useEffect(() => {\r\n    if (loading || isAuthenticated) {\r\n      return;\r\n    }\r\n    const fn = async () => {\r\n      await loginWithRedirect({\r\n        appState: { targetUrl: path }\r\n      });\r\n    };\r\n    fn();\r\n  }, [loading, isAuthenticated, loginWithRedirect, path]);\r\n\r\n  const render = props =>\r\n    isAuthenticated === true ? <Component {...props} /> : null;\r\n\r\n  return <Route path={path} render={render} {...rest} />;\r\n};\r\n\r\nexport default PrivateRoute;","import React from \"react\";\r\nimport NavBar from \"./components/navbar/Navbar.component\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../src/'\r\n\r\n// New - import the React Router components, and the Profile page component\r\nimport { Router, Route, Switch } from \"react-router-dom\";\r\nimport Profile from \"./components/profile/Profile.component\";\r\nimport history from \"./utils/history\";\r\nimport PrivateRoute from \"./components/PrivateRoute\";\r\nimport Welcome from './components/Welcome.component';\r\nimport Home from './components/Card.component';\r\nimport Card from './components/Card.component';\r\n\r\n\r\n\r\n\r\nconst  App = ()  => {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router history={history}>\r\n      <Welcome/>\r\n        <header>\r\n          <NavBar />\r\n        </header>\r\n        <Switch>\r\n          <Route path=\"/\" exact/>\r\n          <Route path=\"/profile\" component={Profile} />\r\n          <PrivateRoute path=\"/profile\" component={Profile} />\r\n          <Route path=\"/home\" component={Home} />\r\n    \r\n        </Switch>\r\n\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { Auth0Provider } from \"./react-auth0-spa\";\r\nimport config from \"./auth_config.json\";\r\nimport history from \"./utils/history\";\r\n\r\n// A function that routes the user to the right place\r\n// after login\r\nconst onRedirectCallback = appState => {\r\n  history.push(\r\n    appState && appState.targetUrl\r\n      ? appState.targetUrl\r\n      : window.location.pathname\r\n  );\r\n};\r\n\r\nReactDOM.render(\r\n  <Auth0Provider\r\n    domain={config.domain}\r\n    client_id={config.clientId}\r\n    redirect_uri={window.location.origin}\r\n    onRedirectCallback={onRedirectCallback}\r\n  >\r\n    <App />\r\n  </Auth0Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}